# Database Configuration
# DEPRECATED: Migrating from Neon to Supabase - this will be removed
# DATABASE_URL=postgresql://user:password@localhost:5432/dbname

# Supabase Session Store URL (Direct Connection - required for express-session)
# Use Direct connection (NOT Pooler) for session store
# Get it from: Supabase Dashboard → Project Settings → Database → Connection String (Direct)
# Format: postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres
SESSION_DB_URL=postgresql://postgres:your-password@db.your-project-ref.supabase.co:5432/postgres

# Supabase Database URL (Pooler Connection - Port 5432)
# ⚠️ 重要：請使用 port 5432 而不是 6543 來避免 "Tenant not found" 錯誤
# Get it from: Supabase Dashboard → Project Settings → Database → Connection String
# Format: postgresql://postgres.[PROJECT-REF]:[PASSWORD]@aws-1-[REGION].pooler.supabase.com:5432/postgres
SUPABASE_DB_URL=postgresql://postgres.your-project-ref:your-password@aws-1-region.pooler.supabase.com:5432/postgres
SUPABASE_SESSION_DB_URL=postgresql://postgres.your-project-ref:your-password@aws-1-region.pooler.supabase.com:5432/postgres

# Session Secret (generate with: openssl rand -hex 32)
SESSION_SECRET=your-random-secret-key-here

# Google Sheets API Credentials (optional, uses mock data if not set)
# To obtain credentials:
# 1. Go to Google Cloud Console
# 2. Create service account
# 3. Generate JSON key
# 4. Paste entire JSON as single line (escape quotes)
GOOGLE_SHEETS_CREDENTIALS={"type":"service_account","project_id":"your-project","private_key_id":"...","private_key":"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n","client_email":"your-service-account@your-project.iam.gserviceaccount.com","client_id":"...","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"..."}

# Supabase Configuration (optional, fallback to local storage if not set)
# If Supabase is not configured, the system will automatically use local storage.
# All features will still work, but data won't persist across restarts.
#
# To set up Supabase:
# 1. Create project at https://supabase.com
# 2. Go to Project Settings → API
# 3. Copy URL and service_role key (NOT anon key)
# 4. Run the SQL schema: Copy content from docs/supabase-schema.sql
# 5. Paste into Supabase SQL Editor and execute
# 6. Data will automatically sync from Google Sheets to Supabase
#
# Benefits of using Supabase:
# - Data persists across server restarts
# - Better query performance for large datasets
# - Enables advanced analytics and reporting
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

# Server Configuration
PORT=5000
NODE_ENV=production

# AI API Configuration (Required for Teaching Quality Analysis)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here

# Optional: Anthropic Claude API (alternative to OpenAI)
# ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Authentication Configuration
# Set to 'true' to skip authentication checks (DEVELOPMENT ONLY)
# This allows testing features without logging in
# WARNING: Never set this to 'true' in production!
SKIP_AUTH=true

# Optional: Enable debug logging
DEBUG=false
